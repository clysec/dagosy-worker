{
    "swagger": "2.0",
    "info": {
        "description": "Universal Rest API",
        "title": "Unintegrate API",
        "termsOfService": "https://github.com/clysec/dagosy-worker",
        "contact": {
            "name": "Cloudyne Support",
            "email": "support@cloudyne.org"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "localhost:4444",
    "basePath": "/",
    "paths": {
        "/api/v1/dns/request/{type}/{domain}": {
            "get": {
                "description": "DNS Request",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dns"
                ],
                "summary": "DNS Request",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Domain",
                        "name": "domain",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Type",
                        "name": "type",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "DNS Request",
                        "schema": {
                            "$ref": "#/definitions/dns.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/v1/dns/reverse/{ip}": {
            "get": {
                "description": "Reverse DNS Request",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dns"
                ],
                "summary": "Reverse DNS Request",
                "parameters": [
                    {
                        "type": "string",
                        "description": "IP",
                        "name": "ip",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Reverse DNS Request",
                        "schema": {
                            "$ref": "#/definitions/dns.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/v1/domain/nameservers/{domain}": {
            "get": {
                "description": "Get nameservers for a domain",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "domain"
                ],
                "summary": "Get Nameservers",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Domain",
                        "name": "domain",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Nameservers",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/v1/domain/whois/{domain}": {
            "get": {
                "description": "Get whois information for a domain",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "domain"
                ],
                "summary": "Whois Information",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Domain",
                        "name": "domain",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "WhoisResponse",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/v1/domain/whois/{domain}/json": {
            "get": {
                "description": "Get whois information for a domain",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "domain"
                ],
                "summary": "Whois Information",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Domain",
                        "name": "domain",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/whoisparser.WhoisInfo"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/v1/files/checkEqual": {
            "post": {
                "description": "Check if two files are equal",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "files"
                ],
                "summary": "Check Equal",
                "parameters": [
                    {
                        "description": "Check Equal Request",
                        "name": "checkEqualRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/files.CheckEqualRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Checked successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/v1/files/copy": {
            "post": {
                "description": "Copy File",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "files"
                ],
                "summary": "Copy File",
                "parameters": [
                    {
                        "description": "Copy File Request",
                        "name": "copyFileRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/files.CopyFileRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "File copied successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/v1/files/copyUrl": {
            "post": {
                "description": "Copy URL to filesystem",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "files"
                ],
                "summary": "Copy URL to filesystem",
                "parameters": [
                    {
                        "description": "Copy URL Request",
                        "name": "copyURLRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/files.CopyURLRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "File copied successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/v1/files/delete": {
            "post": {
                "description": "Delete File",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "files"
                ],
                "summary": "Delete File",
                "parameters": [
                    {
                        "description": "Remote Configuration",
                        "name": "remote",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/files.DeleteFileRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "File deleted successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/v1/files/list": {
            "post": {
                "description": "List Files",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "files"
                ],
                "summary": "List Files",
                "parameters": [
                    {
                        "description": "Remote Configuration",
                        "name": "remote",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/files.ListFilesRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/files.ListFilesResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/v1/files/moveBackupDir": {
            "post": {
                "description": "Move a file to a backup directory",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "files"
                ],
                "summary": "Move Backup Dir",
                "parameters": [
                    {
                        "description": "Move Backup Dir Request",
                        "name": "moveBackupDirRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/files.MoveBackupDirRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Backup directory moved successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/v1/files/moveFile": {
            "post": {
                "description": "Move File",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "files"
                ],
                "summary": "Move File",
                "parameters": [
                    {
                        "description": "Move File Request",
                        "name": "moveFileRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/files.MoveFileRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "File moved successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/v1/files/read": {
            "post": {
                "description": "Read File",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "files"
                ],
                "summary": "Read File",
                "parameters": [
                    {
                        "description": "Remote Configuration",
                        "name": "remote",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/files.ReadFileRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/files.ReadFileResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/v1/files/removeDir": {
            "post": {
                "description": "Removes an empty directory",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "files"
                ],
                "summary": "Remove Empty Directory",
                "parameters": [
                    {
                        "description": "Remove Directory Request",
                        "name": "rmdirsRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/files.RmdirRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Removed successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/v1/files/removeDirs": {
            "post": {
                "description": "Recursively remove directories",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "files"
                ],
                "summary": "Remove Directories",
                "parameters": [
                    {
                        "description": "Remove Directories Request",
                        "name": "rmdirsRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/files.RmdirsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Removed successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/v1/files/sync": {
            "post": {
                "description": "Sync",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "files"
                ],
                "summary": "Sync",
                "parameters": [
                    {
                        "description": "Sync Request",
                        "name": "syncRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/files.SyncRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Synced successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/v1/files/syncCopyDir": {
            "post": {
                "description": "Sync CopyDir",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "files"
                ],
                "summary": "Sync CopyDir",
                "parameters": [
                    {
                        "description": "Sync CopyDir Request",
                        "name": "syncCopyDirRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/files.SyncCopyDirRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Synced successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/v1/files/syncMoveDir": {
            "post": {
                "description": "Sync MoveDir",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "files"
                ],
                "summary": "Sync MoveDir",
                "parameters": [
                    {
                        "description": "Sync MoveDir Request",
                        "name": "syncMoveDirRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/files.SyncMoveDirRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Synced successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/v1/files/write": {
            "put": {
                "description": "Write File. You can attach an arbitrary number of files to the request. All have to be placed in the \"file\" field.",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "files"
                ],
                "summary": "Write File",
                "parameters": [
                    {
                        "type": "file",
                        "description": "File",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Remote Configuration",
                        "name": "remote",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Path",
                        "name": "path",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Overwrite",
                        "name": "overwrite",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/files.WriteFileResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "config.UpdateRemoteOpt": {
            "type": "object",
            "properties": {
                "all": {
                    "description": "If set then ask all the questions, not just the post config questions",
                    "type": "boolean"
                },
                "continue": {
                    "description": "If set then supply state and result parameters to continue the process",
                    "type": "boolean"
                },
                "edit": {
                    "description": "If set then edit existing values",
                    "type": "boolean"
                },
                "noObscure": {
                    "description": "Treat all passwords as obscured",
                    "type": "boolean"
                },
                "nonInteractive": {
                    "description": "Don't interact with the user - return questions",
                    "type": "boolean"
                },
                "obscure": {
                    "description": "Treat all passwords as plain that need obscuring",
                    "type": "boolean"
                },
                "result": {
                    "description": "Result to return - used with Continue",
                    "type": "string"
                },
                "state": {
                    "description": "State to restart with - used with Continue",
                    "type": "string"
                }
            }
        },
        "dns.Answer": {
            "type": "object",
            "properties": {
                "TTL": {
                    "type": "integer"
                },
                "data": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "integer"
                }
            }
        },
        "dns.Question": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "integer"
                }
            }
        },
        "dns.Response": {
            "type": "object",
            "properties": {
                "AD": {
                    "type": "boolean"
                },
                "Answer": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dns.Answer"
                    }
                },
                "CD": {
                    "type": "boolean"
                },
                "Question": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dns.Question"
                    }
                },
                "RA": {
                    "type": "boolean"
                },
                "RD": {
                    "type": "boolean"
                },
                "Status": {
                    "type": "integer"
                },
                "TC": {
                    "type": "boolean"
                },
                "provider": {
                    "type": "string"
                }
            }
        },
        "files.CheckEqualRequest": {
            "type": "object",
            "properties": {
                "destinationPath": {
                    "type": "string"
                },
                "destinationRemote": {
                    "$ref": "#/definitions/files.RemoteConfiguration"
                },
                "sourcePath": {
                    "type": "string"
                },
                "sourceRemote": {
                    "$ref": "#/definitions/files.RemoteConfiguration"
                }
            }
        },
        "files.CopyFileRequest": {
            "type": "object",
            "properties": {
                "destinationPath": {
                    "type": "string"
                },
                "destinationRemote": {
                    "$ref": "#/definitions/files.RemoteConfiguration"
                },
                "sourcePath": {
                    "type": "string"
                },
                "sourceRemote": {
                    "$ref": "#/definitions/files.RemoteConfiguration"
                }
            }
        },
        "files.CopyURLRequest": {
            "type": "object",
            "properties": {
                "autoFilename": {
                    "type": "boolean"
                },
                "dstFilenameFromHeader": {
                    "type": "boolean"
                },
                "noClobber": {
                    "type": "boolean"
                },
                "path": {
                    "type": "string"
                },
                "remote": {
                    "$ref": "#/definitions/files.RemoteConfiguration"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "files.DeleteFileRequest": {
            "type": "object",
            "properties": {
                "path": {
                    "type": "string"
                },
                "remote": {
                    "$ref": "#/definitions/files.RemoteConfiguration"
                }
            }
        },
        "files.ListFilesRequest": {
            "type": "object",
            "properties": {
                "options": {
                    "$ref": "#/definitions/operations.ListJSONOpt"
                },
                "path": {
                    "type": "string"
                },
                "recurse": {
                    "type": "boolean"
                },
                "remote": {
                    "$ref": "#/definitions/files.RemoteConfiguration"
                }
            }
        },
        "files.ListFilesResponse": {
            "type": "object",
            "properties": {
                "files": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/operations.ListJSONItem"
                    }
                }
            }
        },
        "files.MoveBackupDirRequest": {
            "type": "object",
            "properties": {
                "destinationPath": {
                    "type": "string"
                },
                "destinationRemote": {
                    "$ref": "#/definitions/files.RemoteConfiguration"
                },
                "sourcePath": {
                    "type": "string"
                },
                "sourceRemote": {
                    "$ref": "#/definitions/files.RemoteConfiguration"
                }
            }
        },
        "files.MoveFileRequest": {
            "type": "object",
            "properties": {
                "destinationPath": {
                    "type": "string"
                },
                "destinationRemote": {
                    "$ref": "#/definitions/files.RemoteConfiguration"
                },
                "sourcePath": {
                    "type": "string"
                },
                "sourceRemote": {
                    "$ref": "#/definitions/files.RemoteConfiguration"
                }
            }
        },
        "files.ReadFileRequest": {
            "type": "object",
            "properties": {
                "path": {
                    "type": "string"
                },
                "remote": {
                    "$ref": "#/definitions/files.RemoteConfiguration"
                }
            }
        },
        "files.ReadFileResponse": {
            "type": "object",
            "properties": {
                "files": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/files.ReadFileResponseItem"
                    }
                }
            }
        },
        "files.ReadFileResponseItem": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "size": {
                    "type": "integer"
                }
            }
        },
        "files.RemoteConfiguration": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "options": {
                    "$ref": "#/definitions/config.UpdateRemoteOpt"
                },
                "parameters": {
                    "type": "object",
                    "additionalProperties": true
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "files.RmdirRequest": {
            "type": "object",
            "properties": {
                "path": {
                    "type": "string"
                },
                "remote": {
                    "$ref": "#/definitions/files.RemoteConfiguration"
                }
            }
        },
        "files.RmdirsRequest": {
            "type": "object",
            "properties": {
                "leaveRoot": {
                    "type": "boolean"
                },
                "path": {
                    "type": "string"
                },
                "remote": {
                    "$ref": "#/definitions/files.RemoteConfiguration"
                }
            }
        },
        "files.SyncCopyDirRequest": {
            "type": "object",
            "properties": {
                "copyEmptyDirs": {
                    "type": "boolean"
                },
                "destinationPath": {
                    "type": "string"
                },
                "destinationRemote": {
                    "$ref": "#/definitions/files.RemoteConfiguration"
                },
                "sourcePath": {
                    "type": "string"
                },
                "sourceRemote": {
                    "$ref": "#/definitions/files.RemoteConfiguration"
                }
            }
        },
        "files.SyncMoveDirRequest": {
            "type": "object",
            "properties": {
                "copyEmptyDirs": {
                    "type": "boolean"
                },
                "deleteEmptySrcDirs": {
                    "type": "boolean"
                },
                "destinationPath": {
                    "type": "string"
                },
                "destinationRemote": {
                    "$ref": "#/definitions/files.RemoteConfiguration"
                },
                "sourcePath": {
                    "type": "string"
                },
                "sourceRemote": {
                    "$ref": "#/definitions/files.RemoteConfiguration"
                }
            }
        },
        "files.SyncRequest": {
            "type": "object",
            "properties": {
                "copyEmptyDirs": {
                    "type": "boolean"
                },
                "destinationPath": {
                    "type": "string"
                },
                "destinationRemote": {
                    "$ref": "#/definitions/files.RemoteConfiguration"
                },
                "sourcePath": {
                    "type": "string"
                },
                "sourceRemote": {
                    "$ref": "#/definitions/files.RemoteConfiguration"
                }
            }
        },
        "files.WriteFileResponse": {
            "type": "object",
            "properties": {
                "files": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/files.WriteFileResponseItem"
                    }
                }
            }
        },
        "files.WriteFileResponseItem": {
            "type": "object",
            "properties": {
                "mimeType": {
                    "type": "string"
                },
                "modTime": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "size": {
                    "type": "integer"
                }
            }
        },
        "fs.Metadata": {
            "type": "object",
            "additionalProperties": {
                "type": "string"
            }
        },
        "operations.ListJSONItem": {
            "type": "object",
            "properties": {
                "encrypted": {
                    "type": "string"
                },
                "encryptedPath": {
                    "type": "string"
                },
                "hashes": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "string"
                },
                "isBucket": {
                    "type": "boolean"
                },
                "isDir": {
                    "type": "boolean"
                },
                "metadata": {
                    "$ref": "#/definitions/fs.Metadata"
                },
                "mimeType": {
                    "type": "string"
                },
                "modTime": {
                    "description": "`json:\",omitempty\"`",
                    "allOf": [
                        {
                            "$ref": "#/definitions/operations.Timestamp"
                        }
                    ]
                },
                "name": {
                    "type": "string"
                },
                "origID": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "size": {
                    "type": "integer"
                },
                "tier": {
                    "type": "string"
                }
            }
        },
        "operations.ListJSONOpt": {
            "type": "object",
            "properties": {
                "dirsOnly": {
                    "type": "boolean"
                },
                "filesOnly": {
                    "type": "boolean"
                },
                "hashTypes": {
                    "description": "hash types to show if ShowHash is set, e.g. \"MD5\", \"SHA-1\"",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "metadata": {
                    "type": "boolean"
                },
                "noMimeType": {
                    "type": "boolean"
                },
                "noModTime": {
                    "type": "boolean"
                },
                "recurse": {
                    "type": "boolean"
                },
                "showEncrypted": {
                    "type": "boolean"
                },
                "showHash": {
                    "type": "boolean"
                },
                "showOrigIDs": {
                    "type": "boolean"
                }
            }
        },
        "operations.Timestamp": {
            "type": "object",
            "properties": {
                "format": {
                    "type": "string"
                },
                "when": {
                    "type": "string"
                }
            }
        },
        "whoisparser.Contact": {
            "type": "object",
            "properties": {
                "city": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "fax": {
                    "type": "string"
                },
                "fax_ext": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "organization": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "phone_ext": {
                    "type": "string"
                },
                "postal_code": {
                    "type": "string"
                },
                "province": {
                    "type": "string"
                },
                "referral_url": {
                    "type": "string"
                },
                "street": {
                    "type": "string"
                }
            }
        },
        "whoisparser.Domain": {
            "type": "object",
            "properties": {
                "created_date": {
                    "type": "string"
                },
                "created_date_in_time": {
                    "type": "string"
                },
                "dnssec": {
                    "type": "boolean"
                },
                "domain": {
                    "type": "string"
                },
                "expiration_date": {
                    "type": "string"
                },
                "expiration_date_in_time": {
                    "type": "string"
                },
                "extension": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "name_servers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "punycode": {
                    "type": "string"
                },
                "status": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "updated_date": {
                    "type": "string"
                },
                "updated_date_in_time": {
                    "type": "string"
                },
                "whois_server": {
                    "type": "string"
                }
            }
        },
        "whoisparser.WhoisInfo": {
            "type": "object",
            "properties": {
                "administrative": {
                    "$ref": "#/definitions/whoisparser.Contact"
                },
                "billing": {
                    "$ref": "#/definitions/whoisparser.Contact"
                },
                "domain": {
                    "$ref": "#/definitions/whoisparser.Domain"
                },
                "registrant": {
                    "$ref": "#/definitions/whoisparser.Contact"
                },
                "registrar": {
                    "$ref": "#/definitions/whoisparser.Contact"
                },
                "technical": {
                    "$ref": "#/definitions/whoisparser.Contact"
                }
            }
        }
    }
}